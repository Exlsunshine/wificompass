/*
 * Created on Dec 21, 2011
 * Author: Paul Woelfel
 * Email: frig@frig.at
 */
package at.fhstp.wificompass.model;

import java.sql.SQLException;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.widget.Toast;
import at.fhstp.wificompass.Logger;
import at.fhstp.wificompass.R;

import com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;
import com.j256.ormlite.support.ConnectionSource;
import com.j256.ormlite.table.TableUtils;

public class DatabaseHelper extends OrmLiteSqliteOpenHelper {

	protected static final Logger log = new Logger(DatabaseHelper.class);

	// name of the database file for your application -- change to something appropriate for your app
	public static final String DATABASE_NAME = "wificompass.db";

	// any time you make changes to your database objects, you may have to increase the database version
	private static final int DATABASE_VERSION = 8;

	protected Context context;

	protected static final Class<?>[] ormClasses = { Project.class, ProjectLocation.class, WifiScanResult.class, BssidResult.class, SensorData.class };

	public DatabaseHelper(Context context) {
		super(context, DATABASE_NAME, null, DATABASE_VERSION);
		this.context = context;
		// to speed up, we could use a config file
		// must be generated by ormlite.sh or
		// java -classpath lib/ormlite-core-4.31.jar:lib/ormlite-android-4.31.jar:bin/res:bin/classes com.j256.ormlite.android.apptools.OrmLiteConfigUtil ormlite_config.txt
		// super(context, DATABASE_NAME, null, DATABASE_VERSION, R.raw.ormlite_config);
	}

	@Override
	public void onCreate(SQLiteDatabase database, ConnectionSource connectionSource) {
		try {

			for (int i = 0; i < ormClasses.length; i++) {
				log.debug("creating table :"+ormClasses[i]);
				TableUtils.createTable(this.getConnectionSource(), ormClasses[i]);
			}

		} catch (SQLException e) {
			log.error("could not create tables!", e);
			Toast.makeText(context, R.string.database_create_failed, Toast.LENGTH_LONG);
		}

	}

	@Override
	public void onUpgrade(SQLiteDatabase database, ConnectionSource connectionSource, int oldVersion, int newVersion) {
		if (oldVersion < newVersion) {
			try {

				recreateDatabase();
				
			} catch (SQLException e) {
				log.error("could not update table structure!", e);
				Toast.makeText(context, R.string.database_create_failed, Toast.LENGTH_LONG);
			}
		}
	}
	
	
	public void recreateDatabase() throws SQLException{
		dropTables();
		createTables();
	}

	
	protected void dropTables() throws SQLException{
		for (int i = 0; i < ormClasses.length; i++) {
			log.debug("droping table :"+ormClasses[i]);
			TableUtils.dropTable(this.getConnectionSource(), ormClasses[i], true);
		}
	}
	
	protected void createTables() throws SQLException{
		for (int i = 0; i < ormClasses.length; i++) {
			log.debug("creating table :"+ormClasses[i]);
			TableUtils.createTable(this.getConnectionSource(), ormClasses[i]);
		}
	}
}
